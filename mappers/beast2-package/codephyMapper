#!/bin/sh

# Determine the location of this script
if [ -z "$SCRIPT_LOCATION" ]; then
    ## resolve links - $0 may be a link to application
    PRG="$0"
    # need this for relative symlinks
    while [ -h "$PRG" ]; do
        ls=`ls -ld "$PRG"`
        link=`expr "$ls" : '.*-> \(.*\)$'`
        if expr "$link" : '/.*' > /dev/null; then
            PRG="$link"
        else
            PRG="`dirname "$PRG"`/$link"
        fi
    done
    saveddir=`pwd`
    SCRIPT_LOCATION=`dirname "$PRG"`
    cd "$saveddir"
fi

# Find BEAST installation
if [ -z "$BEAST" ]; then
    if [ -d "/Applications/BEAST 2.7.5" ]; then
        BEAST="/Applications/BEAST 2.7.5"
    elif [ -d "$HOME/Applications/BEAST 2.7.5" ]; then
        BEAST="$HOME/Applications/BEAST 2.7.5"
    elif [ -d "/usr/local/share/beast" ]; then
        BEAST="/usr/local/share/beast"
    else
        echo "Cannot find BEAST2 installation. Please set BEAST environment variable."
        exit 1
    fi
fi

# Set Java
JAVA="java"
if [ -x "${BEAST}/jre/bin/java" ]; then
    JAVA="${BEAST}/jre/bin/java"
fi

# Directly run the app with a full classpath
CLASSPATH="${BEAST}/lib/launcher.jar"
CLASSPATH="${CLASSPATH}:${BEAST}/lib/packages/BEAST.base.jar"
CLASSPATH="${CLASSPATH}:${BEAST}/lib/packages/BEAST.app.jar"
CLASSPATH="${CLASSPATH}:${SCRIPT_LOCATION}/codephy-beast2-package.v0.1.0.jar"
CLASSPATH="${CLASSPATH}:${SCRIPT_LOCATION}/lib/codephy-mapper.jar"

# Run directly with the proper classpath
"$JAVA" -Dlauncher.wait.for.exit=true -Xss256m -Xmx4g -cp "$CLASSPATH" org.codephy.beast2.app.CodephyMapperApp $@
        